0 CODE := CODEPART 
1 CODE := CODE CODEPART 
2 CODEPART := FUNC_DEF 
3 CODEPART := FUNC_STMT 
4 CODEPART := VAR_DEF 
5 CODEPART := VAR_STMT 
6 CODEPART := ARRAY_DEF 
7 FUNC_DEF := <type> FUNC_IDENTIFIER ( PARAMETERS_N ) BLOCK 
8 FUNC_STMT := <type> FUNC_IDENTIFIER ( PARAMETERS_N ) ; 
9 VAR_DEF := <type> VAR_IDENTIFIER = EXPR ; 
10 VAR_STMT := <type> VAR_IDENTIFIERS ; 
11 VAR_STMT := <type> VAR_IDENTIFIER_A ; 
12 ARRAY_DEF := <type> VAR_IDENTIFIER_A = { COMMA_EXP } ; 
13 VAR_IDENTIFIERS := VAR_IDENTIFIER 
14 VAR_IDENTIFIERS := VAR_IDENTIFIERS , VAR_IDENTIFIER 
15 FUNC_IDENTIFIER := <identifier> 
16 VAR_IDENTIFIER := <identifier> 
17 VAR_IDENTIFIER_A := <identifier> 
18 VAR_IDENTIFIER_A := VAR_IDENTIFIER_A [ <number> ] 
19 PARAMETERS_N := PARAMETERS 
20 PARAMETERS_N := <none> 
21 PARAMETERS := PARAMETER 
22 PARAMETERS := PARAMETERS , PARAMETER 
23 PARAMETER := <type> <identifier> 
24 PARAMETER := <type> ( PARAMETER_IDF ) 
25 PARAMETER_IDF := <identifier> 
26 PARAMETER_IDF := PARAMETER_IDF [ <number> ] 
27 BLOCK := { SENTENCES_N } 
28 S_OR_B := SENTENCE 
29 S_OR_B := BLOCK 
30 SENTENCES_N := SENTENCES 
31 SENTENCES_N := <none> 
32 SENTENCES := SENTENCE 
33 SENTENCES := SENTENCES SENTENCE 
34 SENTENCE := EXPR ; 
35 SENTENCE := ASSIGN_STC 
36 SENTENCE := FOR_STC 
37 SENTENCE := WHILE_STC 
38 SENTENCE := DO_STC 
39 SENTENCE := IF_STC 
40 SENTENCE := SWITCH_STC 
41 SENTENCE := BREAK_STC 
42 SENTENCE := CONTINUE_STC 
43 SENTENCE := VAR_STMT 
44 SENTENCE := VAR_DEF 
45 SENTENCE := ARRAY_DEF 
46 SENTENCE := RETURN_STC 
47 FOR_STC := <for> ( FOR_EXPRS ) BLOCK 
48 FOR_EXPRS := EXPR_AN ; EXPR_AN ; EXPR_AN 
49 EXPR_AN := ASSIGN_EXP 
50 EXPR_AN := EXPR 
51 EXPR_AN := <none> 
52 WHILE_STC := <while> ( EXPR ) BLOCK 
53 DO_STC := <do> S_OR_B <while> ( EXPR ) 
54 BREAK_STC := <break> ; 
55 CONTINUE_STC := <continue> ; 
56 IF_STC := <if> ( EXPR ) S_OR_B ELSE_STC_N 
57 ELSE_STC_N := ELSE_STC 
58 ELSE_STC_N := <none> 
59 ELSE_STC := <else> BLOCK 
60 SWITCH_STC := <switch> ( EXPR ) { CS_OR_D } 
61 CS_OR_D := CASES_N 
62 CS_OR_D := CASES_N DEFAULT_STC 
63 CASES_N := CASES 
64 CASES_N := <none> 
65 CASES := CASE_STC 
66 CASES := CASES CASE_STC 
67 CASE_STC := <case> EXPR : S_OR_B 
68 DEFAULT_STC := <default> : S_OR_B 
69 RETURN_STC := <return> EXPR_N ; 
70 EXPR_N := EXPR 
71 EXPR_N := <none> 
72 ASSIGN_STC := ASSIGN_EXP ; 
73 ASSIGN_EXP := <identifier> = EXPR 
74 ASSIGN_EXP := ( ARRAY_VISIT ) = EXPR 
75 ARRAY_VISIT := <identifier> 
76 ARRAY_VISIT := ARRAY_VISIT [ EXPR ] 
77 EXPR := EXPR_ 
78 EXPR := EXPR <opr_right> 
79 EXPR := EXPR <opr_two> EXPR 
80 EXPR := EXPR <opr_minus> EXPR 
81 EXPR := <opr_left> EXPR 
82 EXPR_ := <identifier> 
83 EXPR_ := <number> 
84 EXPR_ := <sizeof> ( TYPE ) 
85 EXPR_ := <opr_minus> <number> 
86 EXPR_ := ( EXPR ) 
87 EXPR_ := ARRAY_VISIT 
88 EXPR_ := FUNC_CALL 
89 COMMA_EXP := COMMA_EXP_ELE 
90 COMMA_EXP := COMMA_EXP , COMMA_EXP_ELE 
91 COMMA_EXP_ELE := EXPR_ 
92 COMMA_EXP_ELE := ( EXPR ) 
93 FUNC_CALL := <identifier> ( COMMA_EXP ) 
94 TYPE := <type> 
